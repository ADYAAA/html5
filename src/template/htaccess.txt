# {% blocktrans %}Apache configuration file{% endblocktrans %}
# httpd.apache.org/docs/2.2/mod/quickreference.html

# {% blocktrans %}Note .htaccess files are an overhead, this logic should be in your Apache config if possible{% endblocktrans %}
# httpd.apache.org/docs/2.2/howto/htaccess.html

# {% blocktrans %}Techniques in here adapted from all over, including:{% endblocktrans %}
#   Kroc Camen: camendesign.com/.htaccess
#   perishablepress.com/press/2006/01/10/stupid-htaccess-tricks/
#   {% blocktrans %}Sample .htaccess file of CMS MODx:{% endblocktrans %} modxcms.com


###
### {% blocktrans %}If you run a webserver other than apache, consider:{% endblocktrans %}
### github.com/paulirish/html5-boilerplate-server-configs
###



# ----------------------------------------------------------------------
# {% blocktrans %}Better website experience for IE users{% endblocktrans %}
# ----------------------------------------------------------------------

# {% blocktrans %}Force the latest IE version, in various cases when it may fall back to IE7 mode{% endblocktrans %}
#  github.com/rails/rails/commit/123eb25#commitcomment-118920
# {% blocktrans %}Use ChromeFrame if it's installed for a better experience for the poor IE folk{% endblocktrans %}

<IfModule mod_setenvif.c>
  <IfModule mod_headers.c>
    BrowserMatch MSIE ie
    Header set X-UA-Compatible "IE=Edge,chrome=1" env=ie
  </IfModule>
</IfModule>

<IfModule mod_headers.c>
# {% blocktrans %}Because X-UA-Compatible isn't sent to non-IE (to save header bytes),{% endblocktrans %}
# {% blocktrans %}We need to inform proxies that content changes based on UA{% endblocktrans %}
  Header append Vary User-Agent
# {% blocktrans %}Cache control is set only if mod_headers is enabled, so that's unncessary to declare{% endblocktrans %}
</IfModule>


# ----------------------------------------------------------------------
# {% blocktrans %}Cross-domain AJAX requests{% endblocktrans %}
# ----------------------------------------------------------------------

# {% blocktrans %}Serve cross-domain ajax requests, disabled.{% endblocktrans %}   
# enable-cors.org
# code.google.com/p/html5security/wiki/CrossOriginRequestSecurity

#  <IfModule mod_headers.c>
#    Header set Access-Control-Allow-Origin "*"
#  </IfModule>



# ----------------------------------------------------------------------
# {% blocktrans %}Webfont access{% endblocktrans %}
# ----------------------------------------------------------------------

# {% blocktrans %}allow access from all domains for webfonts{% endblocktrans %}
# {% blocktrans %}alternatively you could only whitelist{% endblocktrans %}
# {% blocktrans %}your subdomains like "sub.domain.com"{% endblocktrans %}

<FilesMatch "\.(ttf|otf|eot|woff|font.css)$">
  <IfModule mod_headers.c>
    Header set Access-Control-Allow-Origin "*"
  </IfModule>
</FilesMatch>



# ----------------------------------------------------------------------
# {% blocktrans %}Proper MIME type for all files{% endblocktrans %}
# ----------------------------------------------------------------------

# audio
AddType audio/ogg                      oga ogg

# video
AddType video/ogg                      ogv
AddType video/mp4                      mp4
AddType video/webm                     webm

# {% blocktrans %}Proper svg serving. Required for svg webfonts on iPad{% endblocktrans %}
#   twitter.com/FontSquirrel/status/14855840545
AddType     image/svg+xml              svg svgz 
AddEncoding gzip                       svgz
                                       
# {% blocktrans %}webfonts{% endblocktrans %}                             
AddType application/vnd.ms-fontobject  eot
AddType font/truetype                  ttf
AddType font/opentype                  otf
AddType application/x-font-woff              woff

# {% blocktrans %}assorted types{% endblocktrans %}                                      
AddType image/x-icon                   ico
AddType image/webp                     webp
AddType text/cache-manifest            appcache manifest
AddType text/x-component               htc
AddType application/x-chrome-extension crx
AddType application/x-xpinstall        xpi
AddType application/octet-stream       safariextz



# ----------------------------------------------------------------------
# {% blocktrans %}Allow concatenation from within specific js and css files{% endblocktrans %}  
# ----------------------------------------------------------------------

# {% blocktrans %}e.g. Inside of script.combined.js you could have{% endblocktrans %} 
#   <!--#include file="libs/jquery-1.5.0.min.js" -->
#   <!--#include file="plugins/jquery.idletimer.js" -->
# {% blocktrans %}and they would be included into this single file{% endblocktrans %}

# {% blocktrans %}this is not in use in the boilerplate as it stands. you may{% endblocktrans %}
# {% blocktrans %}choose to name your files in this way for this advantage{% endblocktrans %}
# {% blocktrans %}or concatenate and minify them manually.{% endblocktrans %}
# {% blocktrans %}Disabled by default.{% endblocktrans %}

# <FilesMatch "\.combined\.(js|css)$">
#         Options +Includes
#         SetOutputFilter INCLUDES
# </FilesMatch>



# ----------------------------------------------------------------------
# {% blocktrans %}gzip compression{% endblocktrans %}
# ----------------------------------------------------------------------

<IfModule mod_deflate.c>


# {% blocktrans %}force deflate for mangled headers{% endblocktrans %} developer.yahoo.com/blogs/ydn/posts/2010/12/pushing-beyond-gzipping/
<IfModule mod_setenvif.c>
  <IfModule mod_headers.c>
    SetEnvIfNoCase ^(Accept-EncodXng|X-cept-Encoding|X{15}|~{15}|-{15})$ ^((gzip|deflate)\s,?\s(gzip|deflate)?|X{4,13}|~{4,13}|-{4,13})$ HAVE_Accept-Encoding
    RequestHeader append Accept-Encoding "gzip,deflate" env=HAVE_Accept-Encoding
  </IfModule>
</IfModule>
# html, txt, css, js, json, xml, htc:
<IfModule filter_module>
  FilterDeclare   COMPRESS
  FilterProvider  COMPRESS  DEFLATE resp=Content-Type /text/(html|css|javascript|plain|x(ml|-component))/
  FilterProvider  COMPRESS  DEFLATE resp=Content-Type /application/(javascript|json|xml|x-javascript)/
  FilterChain     COMPRESS
  FilterProtocol  COMPRESS  change=yes;byteranges=no
</IfModule>

<IfModule !mod_filter.c>
  # {% blocktrans %}Legacy versions of Apache{% endblocktrans %}
  AddOutputFilterByType DEFLATE text/html text/plain text/css application/json
  AddOutputFilterByType DEFLATE text/javascript application/javascript application/x-javascript 
  AddOutputFilterByType DEFLATE text/xml application/xml text/x-component
</IfModule>

# {% blocktrans %}webfonts and svg:{% endblocktrans %}
  <FilesMatch "\.(ttf|otf|eot|svg)$" >
    SetOutputFilter DEFLATE
  </FilesMatch>
</IfModule>



# ----------------------------------------------------------------------
# {% blocktrans %}Expires headers (for better cache control){% endblocktrans %}
# ----------------------------------------------------------------------

# {% blocktrans %}these are pretty far-future expires headers{% endblocktrans %}
# {% blocktrans %}they assume you control versioning with cachebusting query params like{% endblocktrans %}
#   <script src="application.js?20100608">
# {% blocktrans %}additionally, consider that outdated proxies may miscache{% endblocktrans %}
#   www.stevesouders.com/blog/2008/08/23/revving-filenames-dont-use-querystring/

# {% blocktrans %}if you don't use filenames to version, lower the css and js to something like{% endblocktrans %}
# {% blocktrans %}"access plus 1 week" or so{% endblocktrans %}

<IfModule mod_expires.c>
  ExpiresActive on

# {% blocktrans %}Perhaps better to whitelist expires rules? Perhaps.{% endblocktrans %}
  ExpiresDefault                          "access plus 1 month"

# {% blocktrans %}cache.appcache needs re-requests in FF 3.6 (thx Remy ~Introducing HTML5){% endblocktrans %}
  ExpiresByType text/cache-manifest       "access plus 0 seconds"

# {% blocktrans %}your document html{% endblocktrans %}
  ExpiresByType text/html                 "access plus 0 seconds"
  
# {% blocktrans %}data{% endblocktrans %}
  ExpiresByType text/xml                  "access plus 0 seconds"
  ExpiresByType application/xml           "access plus 0 seconds"
  ExpiresByType application/json          "access plus 0 seconds"

# {% blocktrans %}rss feed{% endblocktrans %}
  ExpiresByType application/rss+xml       "access plus 1 hour"

# {% blocktrans %}favicon (cannot be renamed){% endblocktrans %}
  ExpiresByType image/x-icon              "access plus 1 week" 

# {% blocktrans %}media: images, video, audio{% endblocktrans %}
  ExpiresByType image/gif                 "access plus 1 month"
  ExpiresByType image/png                 "access plus 1 month"
  ExpiresByType image/jpg                 "access plus 1 month"
  ExpiresByType image/jpeg                "access plus 1 month"
  ExpiresByType video/ogg                 "access plus 1 month"
  ExpiresByType audio/ogg                 "access plus 1 month"
  ExpiresByType video/mp4                 "access plus 1 month"
  ExpiresByType video/webm                "access plus 1 month"
  
# {% blocktrans %}htc files  (css3pie){% endblocktrans %}
  ExpiresByType text/x-component          "access plus 1 month"
  
# {% blocktrans %}webfonts{% endblocktrans %}
  ExpiresByType font/truetype             "access plus 1 month"
  ExpiresByType font/opentype             "access plus 1 month"
  ExpiresByType font/woff                 "access plus 1 month"
  ExpiresByType image/svg+xml             "access plus 1 month"
  ExpiresByType application/vnd.ms-fontobject "access plus 1 month"
    
# {% blocktrans %}css and javascript{% endblocktrans %}
  ExpiresByType text/css                  "access plus 2 months"
  ExpiresByType application/javascript    "access plus 2 months"
  ExpiresByType text/javascript           "access plus 2 months"
  
  <IfModule mod_headers.c>
    Header append Cache-Control "public"
  </IfModule>
  
</IfModule>



# ----------------------------------------------------------------------
# {% blocktrans %}ETag removal{% endblocktrans %}
# ----------------------------------------------------------------------

# {% blocktrans %}Since we're sending far-future expires, we don't need ETags for{% endblocktrans %}
# {% blocktrans %}static content.{% endblocktrans %}
# developer.yahoo.com/performance/rules.html#etags
FileETag None



# ----------------------------------------------------------------------
# {% blocktrans %}Stop screen flicker in IE on CSS rollovers{% endblocktrans %}
# ----------------------------------------------------------------------

# {% blocktrans %}The following directives stop screen flicker in IE on CSS rollovers - in{% endblocktrans %}
# {% blocktrans %}combination with the "ExpiresByType" rules for images (see above). If{% endblocktrans %}
# {% blocktrans %}needed, un-comment the following rules.{% endblocktrans %}

# BrowserMatch "MSIE" brokenvary=1
# BrowserMatch "Mozilla/4.[0-9]{2}" brokenvary=1
# BrowserMatch "Opera" !brokenvary
# SetEnvIf brokenvary 1 force-no-vary



# ----------------------------------------------------------------------
# {% blocktrans %}Cookie setting from iframes{% endblocktrans %}
# ----------------------------------------------------------------------

# {% blocktrans %}Allow cookies to be set from iframes (for IE only){% endblocktrans %}
# {% blocktrans %}If needed, uncomment and specify a path or regex in the Location directive{% endblocktrans %}

# <IfModule mod_headers.c>
#   <Location />
#     Header set P3P "policyref=\"/w3c/p3p.xml\", CP=\"IDC DSP COR ADM DEVi TAIi PSA PSD IVAi IVDi CONi HIS OUR IND CNT\""
#   </Location>
# </IfModule>



# ----------------------------------------------------------------------
# {% blocktrans %}Start rewrite engine{% endblocktrans %}
# ----------------------------------------------------------------------

# {% blocktrans %}Turning on the rewrite engine is necessary for the following rules and features.{% endblocktrans %}

<IfModule mod_rewrite.c>
  RewriteEngine On
</IfModule>



# ----------------------------------------------------------------------
# {% blocktrans %}Suppress or force the "www." at the beginning of URLs{% endblocktrans %}
# ----------------------------------------------------------------------

# {% blocktrans %}The same content should never be available under two different URLs - especially not with and{% endblocktrans %}
# {% blocktrans %}without "www." at the beginning, since this can cause SEO problems (duplicate content).{% endblocktrans %}
# {% blocktrans %}That's why you should choose one of the alternatives and redirect the other one.{% endblocktrans %}

# {% blocktrans %}By default option 1 (no "www.") is activated. Remember: Shorter URLs are sexier.{% endblocktrans %}
# no-www.org/faq.php?q=class_b

# {% blocktrans %}If you rather want to use option 2, just comment out all option 1 lines{% endblocktrans %}
# {% blocktrans %}and uncomment option 2.{% endblocktrans %}
# {% blocktrans %}IMPORTANT: NEVER USE BOTH RULES AT THE SAME TIME!{% endblocktrans %}

# ----------------------------------------------------------------------

# {% blocktrans %}Option 1:{% endblocktrans %}
# Rewrite "www.domain.com -> domain.com" 

<IfModule mod_rewrite.c>
  RewriteCond %{HTTPS} !=on
  RewriteCond %{HTTP_HOST} ^www\.(.+)$ [NC]
  RewriteRule ^(.*)$ http://%1/$1 [R=301,L]
</IfModule>

# ----------------------------------------------------------------------

# {% blocktrans %}Option 2:{% endblocktrans %}
# {% blocktrans %}To rewrite "domain.com -> www.domain.com" uncomment the following lines.{% endblocktrans %}
# {% blocktrans %}Be aware that the following rule might not be a good idea if you{% endblocktrans %}
# {% blocktrans %}use "real" subdomains for certain parts of your website.{% endblocktrans %}

# <IfModule mod_rewrite.c>
#   RewriteCond %{HTTPS} !=on
#   RewriteCond %{HTTP_HOST} !^www\..+$ [NC]
#   RewriteCond %{HTTP_HOST} (.+)$ [NC]
#   RewriteRule ^(.*)$ http://www.%1/$1 [R=301,L]
# </IfModule>



# ----------------------------------------------------------------------
# {% blocktrans %}Add/remove trailing slash to (non-file) URLs{% endblocktrans %}
# ----------------------------------------------------------------------

# {% blocktrans %}Google treats URLs with and without trailing slashes separately.{% endblocktrans %}
# {% blocktrans %}Forcing a trailing slash is usually preferred, but all that's really{% endblocktrans %}
# {% blocktrans %}important is that one correctly redirects to the other.{% endblocktrans %}

# {% blocktrans %}By default option 1 (force trailing slash) is activated.{% endblocktrans %}
# http://googlewebmastercentral.blogspot.com/2010/04/to-slash-or-not-to-slash.html
# http://www.alistapart.com/articles/slashforward/
# http://httpd.apache.org/docs/2.0/misc/rewriteguide.html#url {% blocktrans %}Trailing Slash Problem{% endblocktrans %}

# ----------------------------------------------------------------------

# {% blocktrans %}Option 1:{% endblocktrans %}
# {% blocktrans %}Rewrite "domain.com/foo -> domain.com/foo/"{% endblocktrans %}

<IfModule mod_rewrite.c>
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteCond %{REQUEST_URI} !(\.[a-zA-Z0-9]{1,5}|/|#(.*))$
  RewriteRule ^(.*)$ /$1/ [R=301,L]
</IfModule>

# ----------------------------------------------------------------------

# {% blocktrans %}Option 2:{% endblocktrans %}
# {% blocktrans %}Rewrite "domain.com/foo/ -> domain.com/foo"{% endblocktrans %}

#<IfModule mod_rewrite.c>
#  RewriteRule ^(.*)/$ /$1 [R=301,L]
#</IfModule>



# ----------------------------------------------------------------------
# {% blocktrans %}Built-in filename-based cache busting{% endblocktrans %}
# ----------------------------------------------------------------------

# {% blocktrans %}If you're not using the build script to manage your filename version revving,{% endblocktrans %}
# {% blocktrans %}you might want to consider enabling this, which will route requests for{% endblocktrans %}
# {% blocktrans %}/css/all.20110203.css to /res/all.css{% endblocktrans %}

# {% blocktrans %}To understand why this is important and a better idea than all.css?v1231,{% endblocktrans %}
# {% blocktrans %}read:{% endblocktrans %} github.com/paulirish/html5-boilerplate/wiki/Version-Control-with-Cachebusting

# {% blocktrans %}Uncomment to enable.{% endblocktrans %}
# <IfModule mod_rewrite.c>
#   RewriteCond %{REQUEST_FILENAME} !-f
#   RewriteCond %{REQUEST_FILENAME} !-d
#   RewriteRule ^(.+)\.(\d+)\.(js|css|png|jpg|gif)$ $1.$3 [L]
# </IfModule>


	
# ----------------------------------------------------------------------
# {% blocktrans %}Prevent SSL cert warnings{% endblocktrans %}
# ----------------------------------------------------------------------

# {% blocktrans %}Rewrite secure requests properly to prevent SSL cert warnings, e.g. prevent {% endblocktrans %}
# {% blocktrans %}https://www.domain.com when your cert only allows https://secure.domain.com{% endblocktrans %}
# {% blocktrans %}Uncomment the following lines to use this feature.{% endblocktrans %}

# <IfModule mod_rewrite.c>
#   RewriteCond %{SERVER_PORT} !^443
#   RewriteRule (.*) https://example-domain-please-change-me.com/$1 [R=301,L]
# </IfModule>



# ----------------------------------------------------------------------
# {% blocktrans %}Prevent 404 errors for non-existing redirected folders{% endblocktrans %}
# ----------------------------------------------------------------------

# {% blocktrans %}without -MultiViews, Apache will give a 404 for a rewrite if a folder of the same name does not exist{% endblocktrans %}
# {% blocktrans %}e.g. /blog/hello : webmasterworld.com/apache/3808792.htm{% endblocktrans %}

Options -MultiViews 



# ----------------------------------------------------------------------
# {% blocktrans %}custom 404 page{% endblocktrans %}
# ----------------------------------------------------------------------

# {% blocktrans %}You can add custom pages to handle 500 or 403 pretty easily, if you like.{% endblocktrans %}
ErrorDocument 404 /404.html



# ----------------------------------------------------------------------
# {% blocktrans %}UTF-8 encoding{% endblocktrans %}
# ----------------------------------------------------------------------

# {% blocktrans %}use utf-8 encoding for anything served text/plain or text/html{% endblocktrans %}
AddDefaultCharset utf-8

# {% blocktrans %}force utf-8 for a number of file formats{% endblocktrans %}
AddCharset utf-8 .html .css .js .xml .json .rss



# ----------------------------------------------------------------------
# {% blocktrans %}A little more security{% endblocktrans %}
# ----------------------------------------------------------------------


# {% blocktrans %}Do we want to advertise the exact version number of Apache we're running?{% endblocktrans %}
# {% blocktrans %}Probably not.{% endblocktrans %}
## {% blocktrans %}This can only be enabled if used in httpd.conf - It will not work in .htaccess{% endblocktrans %}
# ServerTokens Prod


# {% blocktrans %}"-Indexes" will have Apache block users from browsing folders without a default document{% endblocktrans %}
# {% blocktrans %}Usually you should leave this activated, because you shouldn't allow everybody to surf through{% endblocktrans %}
# {% blocktrans %}every folder on your server (which includes rather private places like CMS system folders).{% endblocktrans %}
# Options -Indexes


# {% blocktrans %}Block access to "hidden" directories whose names begin with a period. This{% endblocktrans %}
# {% blocktrans %}includes directories used by version control systems such as Subversion or Git.{% endblocktrans %}
<IfModule mod_rewrite.c>
  RewriteRule "(^|/)\." - [F]
</IfModule>


# {% blocktrans %}If your server is not already configured as such, the following directive{% endblocktrans %}
# {% blocktrans %}should be uncommented in order to set PHP's register_globals option to OFF.{% endblocktrans %}
# {% blocktrans %}This closes a major security hole that is abused by most XSS (cross-site{% endblocktrans %}
# {% blocktrans %}scripting) attacks. For more information: http://php.net/register_globals{% endblocktrans %}
#
# {% blocktrans %}IF REGISTER_GLOBALS DIRECTIVE CAUSES 500 INTERNAL SERVER ERRORS :{% endblocktrans %}
#
# {% blocktrans %}Your server does not allow PHP directives to be set via .htaccess. In that{% endblocktrans %}
# {% blocktrans %}case you must make this change in your php.ini file instead. If you are{% endblocktrans %}
# {% blocktrans %}using a commercial web host, contact the administrators for assistance in{% endblocktrans %}
# {% blocktrans %}doing this. Not all servers allow local php.ini files, and they should{% endblocktrans %}
# {% blocktrans %}include all PHP configurations (not just this one), or you will effectively{% endblocktrans %}
# {% blocktrans %}reset everything to PHP defaults. Consult www.php.net for more detailed{% endblocktrans %}
# {% blocktrans %}information about setting PHP directives.{% endblocktrans %}

# php_flag register_globals Off




