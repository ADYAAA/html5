# {% blocktrans %}Apache configuration file{% endblocktrans %}
# httpd.apache.org/docs/2.2/mod/quickreference.html

# {% blocktrans %}Note .htaccess files are an overhead, this logic should be in your Apache config if possible{% endblocktrans %}
# httpd.apache.org/docs/2.2/howto/htaccess.html

# {% blocktrans %}Techniques in here adapted from all over, including:{% endblocktrans %}
#   Kroc Camen: camendesign.com/.htaccess
#   perishablepress.com/press/2006/01/10/stupid-htaccess-tricks/
#   {% blocktrans %}Sample .htaccess file of CMS MODx:{% endblocktrans %} modxcms.com


###
### {% blocktrans %}If you run a webserver other than apache, consider:{% endblocktrans %}
### github.com/paulirish/html5-boilerplate-server-configs
###



# ----------------------------------------------------------------------
# {% blocktrans %}Better website experience for IE users{% endblocktrans %}
# ----------------------------------------------------------------------

# {% blocktrans %}Force the latest IE version, in various cases when it may fall back to IE7 mode{% endblocktrans %}
# github.com/rails/rails/commit/123eb25#commitcomment-118920
# {% blocktrans %}Use ChromeFrame if it's installed for a better experience for the poor IE folk{% endblocktrans %}

<IfModule mod_setenvif.c>
  <IfModule mod_headers.c>
    BrowserMatch MSIE ie
    Header set X-UA-Compatible "IE=Edge,chrome=1" env=ie
  </IfModule>
</IfModule>

<IfModule mod_headers.c>
# 
# {% blocktrans %}Because X-UA-Compatible isn't sent to non-IE (to save header bytes), we need to inform proxies that content changes based on UA{% endblocktrans %}
# 
  Header append Vary User-Agent
# {% blocktrans %}Cache control is set only if mod_headers is enabled, so that's unncessary to declare{% endblocktrans %}
</IfModule>


# ----------------------------------------------------------------------
# {% blocktrans %}Cross-domain AJAX requests{% endblocktrans %}
# ----------------------------------------------------------------------

# {% blocktrans %}Serve cross-domain ajax requests, disabled.{% endblocktrans %}   
# enable-cors.org
# code.google.com/p/html5security/wiki/CrossOriginRequestSecurity

#  <IfModule mod_headers.c>
#    Header set Access-Control-Allow-Origin "*"
#  </IfModule>



# ----------------------------------------------------------------------
# {% blocktrans %}Webfont access{% endblocktrans %}
# ----------------------------------------------------------------------

# 
# {% blocktrans %}allow access from all domains for webfonts{% endblocktrans %}
# {% blocktrans %}alternatively you could only whitelist{% endblocktrans %}
# {% blocktrans %}your subdomains like "sub.domain.com"{% endblocktrans %}
# 

<FilesMatch "\.(ttf|otf|eot|woff|font.css)$">
  <IfModule mod_headers.c>
    Header set Access-Control-Allow-Origin "*"
  </IfModule>
</FilesMatch>



# ----------------------------------------------------------------------
# {% blocktrans %}Proper MIME type for all files{% endblocktrans %}
# ----------------------------------------------------------------------

# {% blocktrans %}Audio{% endblocktrans %}
AddType audio/ogg                      oga ogg
AddType audio/mp4                      m4a

# {% blocktrans %}Video{% endblocktrans %}
AddType video/ogg                      ogv
AddType video/mp4                      mp4 m4v
AddType video/webm                     webm

# {% blocktrans %}Proper svg serving. Required for svg webfonts on iPad{% endblocktrans %}
#   twitter.com/FontSquirrel/status/14855840545
AddType     image/svg+xml              svg svgz 
AddEncoding gzip                       svgz
                                       
# {% blocktrans %}Webfonts{% endblocktrans %}                             
AddType application/vnd.ms-fontobject  eot
AddType application/x-font-ttf    ttf ttc
AddType font/opentype                  otf
AddType application/x-font-woff        woff

# {% blocktrans %}Assorted types{% endblocktrans %}                                      
AddType image/x-icon                   ico
AddType image/webp                     webp
AddType text/cache-manifest            appcache manifest
AddType text/x-component               htc
AddType application/x-chrome-extension crx
AddType application/x-xpinstall        xpi
AddType application/octet-stream       safariextz
AddType text/x-vcard                   vcf



# ----------------------------------------------------------------------
# {% blocktrans %}Allow concatenation from within specific js and css files{% endblocktrans %}  
# ----------------------------------------------------------------------

# {% blocktrans %}e.g. Inside of script.combined.js you could have{% endblocktrans %}
#
#   <!--#include file="jquery-1.4.2.js" -->
#   <!--#include file="jquery.idletimer.js" -->
#
# {% blocktrans %}and they would be included into this single file{% endblocktrans %}
# 
#
# 
# {% blocktrans %}This is not in use in the boilerplate as it stands. You may choose to name your files in this way for this advantage or concatenate and minify them manually.{% endblocktrans %}
# 
# {% blocktrans %}Disabled by default.{% endblocktrans %}

# <FilesMatch "\.combined\.(js|css)$">
#         Options +Includes
#         SetOutputFilter INCLUDES
# </FilesMatch>



# ----------------------------------------------------------------------
# {% blocktrans %}Gzip compression{% endblocktrans %}
# ----------------------------------------------------------------------

<IfModule mod_deflate.c>


# {% blocktrans %}force deflate for mangled headers{% endblocktrans %} 
# developer.yahoo.com/blogs/ydn/posts/2010/12/pushing-beyond-gzipping/
<IfModule mod_setenvif.c>
  <IfModule mod_headers.c>
    SetEnvIfNoCase ^(Accept-EncodXng|X-cept-Encoding|X{15}|~{15}|-{15})$ ^((gzip|deflate)\s,?\s(gzip|deflate)?|X{4,13}|~{4,13}|-{4,13})$ HAVE_Accept-Encoding
    RequestHeader append Accept-Encoding "gzip,deflate" env=HAVE_Accept-Encoding
  </IfModule>
</IfModule>
# HTML, TXT, CSS, JavaScript, JSON, XML, HTC:
<IfModule filter_module>
  FilterDeclare   COMPRESS
   FilterProvider  COMPRESS  DEFLATE resp=Content-Type $text/html
   FilterProvider  COMPRESS  DEFLATE resp=Content-Type $text/css
   FilterProvider  COMPRESS  DEFLATE resp=Content-Type $text/javascript
   FilterProvider  COMPRESS  DEFLATE resp=Content-Type $text/plain
   FilterProvider  COMPRESS  DEFLATE resp=Content-Type $text/xml
   FilterProvider  COMPRESS  DEFLATE resp=Content-Type $text/x-component
   FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/javascript
   FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/json
   FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/xml
   FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/x-javascript
   FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/xhtml+xml
   FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/rss+xml
   FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/atom+xml
   FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/vnd.ms-fontobject
   FilterProvider  COMPRESS  DEFLATE resp=Content-Type $image/svg+xml
   FilterProvider  COMPRESS  DEFLATE resp=Content-Type $application/x-font-ttf
   FilterProvider  COMPRESS  DEFLATE resp=Content-Type $font/opentype
  FilterChain     COMPRESS
  FilterProtocol  COMPRESS  DEFLATE change=yes;byteranges=no
</IfModule>

<IfModule !mod_filter.c>
  # {% blocktrans %}Legacy versions of Apache{% endblocktrans %}
  AddOutputFilterByType DEFLATE text/html text/plain text/css application/json
  AddOutputFilterByType DEFLATE text/javascript application/javascript application/x-javascript 
  AddOutputFilterByType DEFLATE text/xml application/xml text/x-component
  AddOutputFilterByType DEFLATE application/xhtml+xml application/rss+xml application/atom+xml
  AddOutputFilterByType DEFLATE image/svg+xml application/vnd.ms-fontobject application/x-font-ttf font/opentype  
</IfModule>
</IfModule>



# ----------------------------------------------------------------------
# {% blocktrans %}Expires headers (for better cache control){% endblocktrans %}
# ----------------------------------------------------------------------

# 
# {% blocktrans %}These are pretty far-future expires headers{% endblocktrans %}
# {% blocktrans %}They assume you control versioning with cachebusting query params like:{% endblocktrans %}
#   <script src="application.js?20100608">
# {% blocktrans %}Additionally, consider that outdated proxies may miscache{% endblocktrans %}
# 
#   www.stevesouders.com/blog/2008/08/23/revving-filenames-dont-use-querystring/

# 
# {% blocktrans %}If you don`t use filenames to version, lower the css and js to something like "access plus 1 week" {% endblocktrans %}
# 

<IfModule mod_expires.c>
  ExpiresActive on

# {% blocktrans %}Perhaps better to whitelist expires rules? Perhaps.{% endblocktrans %}
  ExpiresDefault                          "access plus 1 month"

# {% blocktrans %}cache.appcache needs re-requests in FF 3.6 (thx Remy ~Introducing HTML5){% endblocktrans %}
  ExpiresByType text/cache-manifest       "access plus 0 seconds"



# {% blocktrans %}Your document html{% endblocktrans %}
  ExpiresByType text/html                 "access plus 0 seconds"
  
# {% blocktrans %}Data{% endblocktrans %}
  ExpiresByType text/xml                  "access plus 0 seconds"
  ExpiresByType application/xml           "access plus 0 seconds"
  ExpiresByType application/json          "access plus 0 seconds"

# {% blocktrans %}RSS feed{% endblocktrans %}
  ExpiresByType application/rss+xml       "access plus 1 hour"

# {% blocktrans %}Favicon (cannot be renamed){% endblocktrans %}
  ExpiresByType image/x-icon              "access plus 1 week" 

# {% blocktrans %}Media: images, video, audio{% endblocktrans %}
  ExpiresByType image/gif                 "access plus 1 month"
  ExpiresByType image/png                 "access plus 1 month"
  ExpiresByType image/jpg                 "access plus 1 month"
  ExpiresByType image/jpeg                "access plus 1 month"
  ExpiresByType video/ogg                 "access plus 1 month"
  ExpiresByType audio/ogg                 "access plus 1 month"
  ExpiresByType video/mp4                 "access plus 1 month"
  ExpiresByType video/webm                "access plus 1 month"
  
# {% blocktrans %}HTC files  (css3pie){% endblocktrans %}
  ExpiresByType text/x-component          "access plus 1 month"
  
# {% blocktrans %}Webfonts{% endblocktrans %}
  ExpiresByType font/truetype             "access plus 1 month"
  ExpiresByType font/opentype             "access plus 1 month"
  ExpiresByType application/x-font-woff   "access plus 1 month"
  ExpiresByType image/svg+xml             "access plus 1 month"
  ExpiresByType application/vnd.ms-fontobject "access plus 1 month"
    
# {% blocktrans %}CSS and JavaScript{% endblocktrans %}
  ExpiresByType text/css                  "access plus 1 year"
  ExpiresByType application/javascript    "access plus 1 year"
  ExpiresByType text/javascript           "access plus 1 year"
  
  <IfModule mod_headers.c>
    Header append Cache-Control "public"
  </IfModule>
  
</IfModule>



# ----------------------------------------------------------------------
# {% blocktrans %}ETag removal{% endblocktrans %}
# ----------------------------------------------------------------------

# FileETag None is not enough for every server.
<IfModule mod_headers.c>
  Header unset ETag
</IfModule>

 
# {% blocktrans %}Since we`re sending far-future expires, we don't need ETags for static content.{% endblocktrans %}
# developer.yahoo.com/performance/rules.html#etags
FileETag None



# ----------------------------------------------------------------------
# {% blocktrans %}Stop screen flicker in IE on CSS rollovers{% endblocktrans %}
# ----------------------------------------------------------------------

# {% blocktrans %}The following directives stop screen flicker in IE on CSS rollovers in combination with the "ExpiresByType" rules for images (see above){% endblocktrans %}
# {% blocktrans %}If needed, un-comment the following rules.{% endblocktrans %}

# BrowserMatch "MSIE" brokenvary=1
# BrowserMatch "Mozilla/4.[0-9]{2}" brokenvary=1
# BrowserMatch "Opera" !brokenvary
# SetEnvIf brokenvary 1 force-no-vary



# ----------------------------------------------------------------------
# {% blocktrans %}Cookie setting from iframes{% endblocktrans %}
# ----------------------------------------------------------------------

# {% blocktrans %}Allow cookies to be set from iframes (for IE only){% endblocktrans %}
# {% blocktrans %}If needed, uncomment and specify a path or regex in the Location directive{% endblocktrans %}

# <IfModule mod_headers.c>
#   <Location />
#     Header set P3P "policyref=\"/w3c/p3p.xml\", CP=\"IDC DSP COR ADM DEVi TAIi PSA PSD IVAi IVDi CONi HIS OUR IND CNT\""
#   </Location>
# </IfModule>



# ----------------------------------------------------------------------
# {% blocktrans %}Start rewrite engine{% endblocktrans %}
# ----------------------------------------------------------------------

# {% blocktrans %}Turning on the rewrite engine is necessary for the following rules and features.{% endblocktrans %}
# {% blocktrans %}FollowSymLinks must be enabled for this to work.{% endblocktrans %}
<IfModule mod_rewrite.c>
  Options +FollowSymlinks
  RewriteEngine On
</IfModule>



# ----------------------------------------------------------------------
# {% blocktrans %}Suppress or force the "www." at the beginning of URLs{% endblocktrans %}
# ----------------------------------------------------------------------

# 
# {% blocktrans %}The same content should never be available under two different URLs, especially not with and without "www." at the beginning, since this can cause SEO problems (duplicate content).{% endblocktrans %}
# {% blocktrans %}That's why you should choose one of the alternatives and redirect the other one.{% endblocktrans %}
# 

# {% blocktrans %}By default option 1 (no "www.") is activated.{% endblocktrans %}
# {% blocktrans %}Remember: Shorter URLs are sexier.{% endblocktrans %}
# no-www.org/faq.php?q=class_b

# 
# {% blocktrans %}If you rather want to use option 2, just comment out all option 1 lines and uncomment option 2.{% endblocktrans %}
# {% blocktrans %}IMPORTANT: NEVER USE BOTH RULES AT THE SAME TIME!{% endblocktrans %}
# 

# ----------------------------------------------------------------------

# 
# {% blocktrans %}Option 1:{% endblocktrans %}
# {% blocktrans %}Rewrite{% endblocktrans %} "www.domain.com -> domain.com"
# 

<IfModule mod_rewrite.c>
  RewriteCond %{HTTPS} !=on
  RewriteCond %{HTTP_HOST} ^www\.(.+)$ [NC]
  RewriteRule ^(.*)$ http://%1/$1 [R=301,L]
</IfModule>

# ----------------------------------------------------------------------

# 
# {% blocktrans %}Option 2:{% endblocktrans %}
# {% blocktrans %}To rewrite "domain.com -> www.domain.com" uncomment the following lines.{% endblocktrans %}
# {% blocktrans %}Be aware that the following rule might not be a good idea if you use "real" subdomains for certain parts of your website.{% endblocktrans %}
# 

# <IfModule mod_rewrite.c>
#   RewriteCond %{HTTPS} !=on
#   RewriteCond %{HTTP_HOST} !^www\..+$ [NC]
#   RewriteCond %{HTTP_HOST} (.+)$ [NC]
#   RewriteRule ^(.*)$ http://www.%1/$1 [R=301,L]
# </IfModule>



# ----------------------------------------------------------------------
# {% blocktrans %}Built-in filename-based cache busting{% endblocktrans %}
# ----------------------------------------------------------------------

# 
# {% blocktrans %}If you're not using the build script to manage your filename version revving, you might want to consider enabling this, which will route requests for /css/all.20110203.css to /res/all.css{% endblocktrans %}
# 

# {% blocktrans %}To understand why this is important and a better idea than all.css?v1231, read:{% endblocktrans %}
# github.com/paulirish/html5-boilerplate/wiki/Version-Control-with-Cachebusting

# {% blocktrans %}Uncomment to enable.{% endblocktrans %}
# <IfModule mod_rewrite.c>
#   RewriteCond %{REQUEST_FILENAME} !-f
#   RewriteCond %{REQUEST_FILENAME} !-d
#   RewriteRule ^(.+)\.(\d+)\.(js|css|png|jpg|gif)$ $1.$3 [L]
# </IfModule>


	
# ----------------------------------------------------------------------
# {% blocktrans %}Prevent SSL cert warnings{% endblocktrans %}
# ----------------------------------------------------------------------

# 
# {% blocktrans %}Rewrite secure requests properly to prevent SSL cert warnings{% endblocktrans %}
# {% blocktrans %}e.g. prevent https://www.domain.com when your cert only allows https://secure.domain.com {% endblocktrans %}
# {% blocktrans %}Uncomment the following lines to use this feature.{% endblocktrans %}
# 

# <IfModule mod_rewrite.c>
#   RewriteCond %{SERVER_PORT} !^443
#   RewriteRule (.*) https://example-domain-please-change-me.com/$1 [R=301,L]
# </IfModule>



# ----------------------------------------------------------------------
# {% blocktrans %}Prevent 404 errors for non-existing redirected folders{% endblocktrans %}
# ----------------------------------------------------------------------

# 
# {% blocktrans %}without -MultiViews, Apache will give a 404 for a rewrite if a folder of the same name does not exist e.g.{% endblocktrans %} /blog/hello : webmasterworld.com/apache/3808792.htm
# 

Options -MultiViews 



# ----------------------------------------------------------------------
# {% blocktrans %}Custom 404 page{% endblocktrans %}
# ----------------------------------------------------------------------

# {% blocktrans %}You can add custom pages to handle 500 or 403 pretty easily, if you like.{% endblocktrans %}
ErrorDocument 404 /404.html



# ----------------------------------------------------------------------
# {% blocktrans %}UTF-8 encoding{% endblocktrans %}
# ----------------------------------------------------------------------

# {% blocktrans %}use utf-8 encoding for anything served text/plain or text/html{% endblocktrans %}
AddDefaultCharset utf-8

# {% blocktrans %}force utf-8 for a number of file formats{% endblocktrans %}
AddCharset utf-8 .html .css .js .xml .json .rss



# ----------------------------------------------------------------------
# {% blocktrans %}A little more security{% endblocktrans %}
# ----------------------------------------------------------------------


# 
# {% blocktrans %}Do we want to advertise the exact version number of Apache we're running? Probably not.{% endblocktrans %}
# {% blocktrans %}This can only be enabled if used in httpd.conf - It will not work in .htaccess{% endblocktrans %}
# 
# ServerTokens Prod


# 
# {% blocktrans %}"-Indexes" will have Apache block users from browsing folders without a default document{% endblocktrans %}
# {% blocktrans %}Usually you should leave this activated, because you shouldn't allow everybody to surf through every folder on your server (which includes rather private places like CMS system folders).{% endblocktrans %}
# 
# Options -Indexes


# 
# {% blocktrans %}Block access to "hidden" directories whose names begin with a period. {% endblocktrans %}
# {% blocktrans %}This includes directories used by version control systems such as Subversion or Git.{% endblocktrans %}
# 
<IfModule mod_rewrite.c>
  RewriteRule "(^|/)\." - [F]
</IfModule>


# 
# {% blocktrans %}If your server is not already configured as such, the following directive should be uncommented in order to set PHP's register_globals option to OFF. This closes a major security hole that is abused by most XSS (cross-site scripting) attacks. For more information:{% endblocktrans %} http://php.net/register_globals
#
# {% blocktrans %}IF REGISTER_GLOBALS DIRECTIVE CAUSES 500 INTERNAL SERVER ERRORS :{% endblocktrans %}
#
# {% blocktrans %}Your server does not allow PHP directives to be set via .htaccess. In that case you must make this change in your php.ini file instead.If you are using a commercial web host, contact the administrators for assistance in doing this.Not all servers allow local php.ini files, and they should include all PHP configurations (not just this one), or you will effectively reset everything to PHP defaults.{% endblocktrans %}
# {% blocktrans %}Consult www.php.net for more detailed information about setting PHP directives.{% endblocktrans %}
# 

# php_flag register_globals Off

# {% blocktrans %}Rename session cookie to something else, than PHPSESSID{% endblocktrans %}
# php_value session.name sid

# {% blocktrans %}Do not show you are using php{% endblocktrans %}
# php_flag expose_php Off

# {% blocktrans %}Level of log detail - log all errors{% endblocktrans %}
# php_value error_reporting -1

# {% blocktrans %}Write errors to log file{% endblocktrans %}
# php_flag log_errors On

# {% blocktrans %}Do not display errors in browser (production - Off, development - On){% endblocktrans %}
# php_flag display_errors Off

# {% blocktrans %}Do not display startup errors (production - Off, development - On){% endblocktrans %}
# php_flag display_startup_errors Off

# {% blocktrans %}Format errors in plain text{% endblocktrans %}
# php_flag html_errors Off

# {% blocktrans %}Show multiple occurrence of error{% endblocktrans %}
# php_flag ignore_repeated_errors Off

# {% blocktrans %}Show same errors from different sources{% endblocktrans %}
# php_flag ignore_repeated_source Off

# {% blocktrans %}Size limit for error messages{% endblocktrans %}
# php_value log_errors_max_len 1024

# {% blocktrans %}Don't precede error with string (doesn't accept empty string, use whitespace if you need){% endblocktrans %}
# php_value error_prepend_string " "

# {% blocktrans %}Don't prepend to error (doesn't accept empty string, use whitespace if you need){% endblocktrans %}
# php_value error_append_string " "

# {% blocktrans %}Increase cookie security{% endblocktrans %}
<IfModule php5_module>
	php_value session.cookie_httponly true
</IfModule>